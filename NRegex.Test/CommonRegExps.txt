//DONE: capture
//DONE: word boundary, line start, line end
//NOTICE: back reference condition and lookaround conditions are not supported
//TODO: lookaround (different groups)
^([a-zA-Z0-9]+\s?)*$
(x+)+y
(x+z)+y :breaks the loop (x+) and (x+)+
//灾难性回溯算法：TODO？


$ number 	Includes the last substring matched by the capturing group that is identified by number, where number is a decimal value, in the replacement string. For more information, see Substituting a Numbered Group.
${ name } 	Includes the last substring matched by the named group that is designated by (?<name> ) in the replacement string. For more information, see Substituting a Named Group.
$$ 	Includes a single "$" literal in the replacement string. For more information, see Substituting a "$" Symbol.
$& 	Includes a copy of the entire match in the replacement string. For more information, see Substituting the Entire Match.
$` 	Includes all the text of the input string before the match in the replacement string. For more information, see Substituting the Text before the Match.
$' 	Includes all the text of the input string after the match in the replacement string. For more information, see Substituting the Text after the Match.
$+ 	Includes the last group captured in the replacement string. For more information, see Substituting the Last Captured Group.
$_ 	Includes the entire input string in the replacement string. For more information, see Substituting the Entire Input String.
	
字符 	描述
\ 	将下一个字符标记为一个特殊字符、或一个原义字符、或一个向后引用、或一个八进制转义符。
	例如，“n”匹配字符“n”。“\n”匹配一个换行符。串行“\\”匹配“\”而“\(”则匹配“(”。
^ 	匹配输入字符串的开始位置。如果设置了RegExp对象的Multiline属性，^也匹配“\n”或“\r”之后的位置。
$ 	匹配输入字符串的结束位置。如果设置了RegExp对象的Multiline属性，$也匹配“\n”或“\r”之前的位置。
* 	匹配前面的子表达式零次或多次。例如，zo*能匹配“z”以及“zoo”。*等价于{0,}。
+ 	匹配前面的子表达式一次或多次。例如，“zo+”能匹配“zo”以及“zoo”，但不能匹配“z”。+等价于{1,}。
? 	匹配前面的子表达式零次或一次。例如，“do(es)?”可以匹配“does”或“does”中的“do”。?等价于{0,1}。
{n} 	n是一个非负整数。匹配确定的n次。例如，“o{2}”不能匹配“Bob”中的“o”，但是能匹配“food”中的两个o。
{n,} 	n是一个非负整数。至少匹配n次。例如，“o{2,}”不能匹配“Bob”中的“o”，但能匹配“foooood”中的所有o。“o{1,}”等价于“o+”。“o{0,}”则等价于“o*”。
{n,m} 	m和n均为非负整数，其中n<=m。最少匹配n次且最多匹配m次。例如，“o{1,3}”将匹配“fooooood”中的前三个o。“o{0,1}”等价于“o?”。请注意在逗号和两个数之间不能有空格。
? 	当该字符紧跟在任何一个其他限制符（*,+,?，{n}，{n,}，{n,m}）后面时，匹配模式是非贪婪的。
非贪婪模式尽可能少的匹配所搜索的字符串，而默认的贪婪模式则尽可能多的匹配所搜索的字符串。
例如，对于字符串“oooo”，“o+?”将匹配单个“o”，而“o+”将匹配所有“o”。
. 	匹配除“\n”之外的任何单个字符。要匹配包括“\n”在内的任何字符，请使用像“(.|\n)”的模式。

(pattern) 	匹配pattern并获取这一匹配。所获取的匹配可以从产生的Matches集合得到，在VBScript中使用SubMatches集合，在JScript中则使用$0…$9属性。要匹配圆括号字符，请使用“\(”或“\)”。

(?:pattern) 	匹配pattern但不获取匹配结果，也就是说这是一个非获取匹配，不进行存储供以后使用。这在使用或字符“(|)”来组合一个模式的各个部分是很有用。例如“industr(?:y|ies)”就是一个比“industry|industries”更简略的表达式。

//NOT SUPPORTED
(?=pattern) 	正向肯定预查，在任何匹配pattern的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如，“Windows(?=95|98|NT|2000)”能匹配“Windows2000”中的“Windows”，但不能匹配“Windows3.1”中的“Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。
(?!pattern) 	正向否定预查，在任何不匹配pattern的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如“Windows(?!95|98|NT|2000)”能匹配“Windows3.1”中的“Windows”，但不能匹配“Windows2000”中的“Windows”。预查不消耗字符，也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始

//NOT SUPPORTED
(?<=pattern) 	反向肯定预查，与正向肯定预查类拟，只是方向相反。例如，“(?<=95|98|NT|2000)Windows”能匹配“2000Windows”中的“Windows”，但不能匹配“3.1Windows”中的“Windows”。
(?<!pattern) 	反向否定预查，与正向否定预查类拟，只是方向相反。例如“(?<!95|98|NT|2000)Windows”能匹配“3.1Windows”中的“Windows”，但不能匹配“2000Windows”中的“Windows”。

x|y 	匹配x或y。例如，“z|food”能匹配“z”或“food”。“(z|f)ood”则匹配“zood”或“food”。

[xyz] 	字符集合。匹配所包含的任意一个字符。例如，“[abc]”可以匹配“plain”中的“a”。
[^xyz] 	负值字符集合。匹配未包含的任意字符。例如，“[^abc]”可以匹配“plain”中的“p”。
[a-z] 	字符范围。匹配指定范围内的任意字符。例如，“[a-z]”可以匹配“a”到“z”范围内的任意小写字母字符。
[^a-z] 	负值字符范围。匹配任何不在指定范围内的任意字符。例如，“[^a-z]”可以匹配任何不在“a”到“z”范围内的任意字符。

\b 	匹配一个单词边界，也就是指单词和空格间的位置。例如，“er\b”可以匹配“never”中的“er”，但不能匹配“verb”中的“er”。
\B 	匹配非单词边界。“er\B”能匹配“verb”中的“er”，但不能匹配“never”中的“er”。
\cx 	匹配由x指明的控制字符。例如，\cM匹配一个Control-M或回车符。x的值必须为A-Z或a-z之一。否则，将c视为一个原义的“c”字符。
\d 	匹配一个数字字符。等价于[0-9]。
\D 	匹配一个非数字字符。等价于[^0-9]。
\f 	匹配一个换页符。等价于\x0c和\cL。
\n 	匹配一个换行符。等价于\x0a和\cJ。
\r 	匹配一个回车符。等价于\x0d和\cM。
\s 	匹配任何空白字符，包括空格、制表符、换页符等等。等价于[ \f\n\r\t\v]。
\S 	匹配任何非空白字符。等价于[^ \f\n\r\t\v]。
\t 	匹配一个制表符。等价于\x09和\cI。
\v 	匹配一个垂直制表符。等价于\x0b和\cK。
\w 	匹配包括下划线的任何单词字符。等价于“[A-Za-z0-9_]”。
\W 	匹配任何非单词字符。等价于“[^A-Za-z0-9_]”。

\xn 	匹配n，其中n为十六进制转义值。十六进制转义值必须为确定的两个数字长。例如，“\x41”匹配“A”。“\x041”则等价于“\x04&1”。正则表达式中可以使用ASCII编码。.
\num 	匹配num，其中num是一个正整数。对所获取的匹配的引用。例如，“(.)\1”匹配两个连续的相同字符。
\n 	标识一个八进制转义值或一个向后引用。如果\n之前至少n个获取的子表达式，则n为向后引用。否则，如果n为八进制数字（0-7），则n为一个八进制转义值。
\nm 	标识一个八进制转义值或一个向后引用。如果\nm之前至少有nm个获得子表达式，则nm为向后引用。如果\nm之前至少有n个获取，则n为一个后跟文字m的向后引用。如果前面的条件都不满足，若n和m均为八进制数字（0-7），则\nm将匹配八进制转义值nm。
\nml 	如果n为八进制数字（0-3），且m和l均为八进制数字（0-7），则匹配八进制转义值nml。
\un 	匹配n，其中n是一个用四个十六进制数字表示的Unicode字符。例如，\u00A9匹配版权符号（©）。
\U

////////////////////////////
用户名 	
^[a-z0-9_-]{3,16}$
密码 	
^[a-z0-9_-]{6,18}$
十六进制值 	
^#?([a-f0-9]{6}|[a-f0-9]{3})$
电子邮箱 	
^([a-z0-9_\.-]+)@([\da-z\.-]+)\.([a-z\.]{2,6})$
^[a-z\d]+(\.[a-z\d]+)*@([\da-z](-[\da-z])?)+(\.{1,2}[a-z]+)+$
URL 	
^(https?:\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$
IP 地址 	
((2[0-4]\d|25[0-5]|[01]?\d\d?)\.){3}(2[0-4]\d|25[0-5]|[01]?\d\d?)
^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$
HTML 标签 	
^<([a-z]+)([^<]+)*(?:>(.*)<\/\1>|\s+\/>)$
删除代码\\注释 	
(?<!http:|\S)//.*$
Unicode编码中的汉字范围 	
^[\u2E80-\u9FFF]+$

1 数字： 
^[0-9]$

 2 n位的数字： 
 ^\d{n}$

 3 至少n位的数字： 
 ^\d{n,}$

 4 m-n位的数字：
 ^\d{m,n}$

 5 零和非零开头的数字：
 ^(0|[1-9][0-9]*)$

 6 非零开头的最多带两位小数的数字：
 ^([1-9][0-9]*)+(.[0-9]{1,2})?$

 7 带1-2位小数的正数或负数：
 ^(\-)?\d+(\.\d{1,2})?$

 8 正数、负数、和小数：
 ^(\-|\+)?\d+(\.\d+)?$

 9 有两位小数的正实数：
 ^[0-9]+(.[0-9]{2})?$

10 有1~3位小数的正实数：
^[0-9]+(.[0-9]{1,3})?$

11 非零的正整数：
^[1-9]\d*$ 
^([1-9][0-9]*){1,3}$ 或 ^\+?[1-9][0-9]*$

12 非零的负整数：
^\-[1-9][]0-9"*$ 或 ^-[1-9]\d*$

13 非负整数：
^\d+$ 
^[1-9]\d*|0$

14 非正整数：
^-[1-9]\d*|0$ 
^((-\d+)|(0+))$

15 非负浮点数：
^\d+(\.\d+)?$ 
^[1-9]\d*\.\d*|0\.\d*[1-9]\d*|0?\.0+|0$

16 非正浮点数：
^((-\d+(\.\d+)?)|(0+(\.0+)?))$ 
^(-([1-9]\d*\.\d*|0\.\d*[1-9]\d*))|0?\.0+|0$

17 正浮点数：
^[1-9]\d*\.\d*|0\.\d*[1-9]\d*$ 
^(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*))$

18 负浮点数：
^-([1-9]\d*\.\d*|0\.\d*[1-9]\d*)$ 
^(-(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*)))$

19 浮点数：
^(-?\d+)(\.\d+)?$ 
^-?([1-9]\d*\.\d*|0\.\d*[1-9]\d*|0?\.0+|0)$

1 汉字：
^[\u4e00-\u9fa5]{0,}$

2 英文和数字：
^[A-Za-z0-9]+$ 
^[A-Za-z0-9]{4,40}$

3 长度为3-20的所有字符：
^.{3,20}$

4 由26个英文字母组成的字符串：
^[A-Za-z]+$

5 由26个大写英文字母组成的字符串：
^[A-Z]+$

6 由26个小写英文字母组成的字符串：
^[a-z]+$

7 由数字和26个英文字母组成的字符串：
^[A-Za-z0-9]+$

8 由数字、26个英文字母或者下划线组成的字符串：
^\w+$ 
^\w{3,20}$

9 中文、英文、数字包括下划线：
^[\u4E00-\u9FA5A-Za-z0-9_]+$

10 中文、英文、数字但不包括下划线等符号：
^[\u4E00-\u9FA5A-Za-z0-9]+$ 
^[\u4E00-\u9FA5A-Za-z0-9]{2,20}$

11 可以输入含有^%&',;=?$\"等字符：
[^%&',;=?$\x22]+

12 禁止输入含有~的字符：
[^~\x22]+

1 Email地址：
^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$

2 域名：
[a-zA-Z0-9][-a-zA-Z0-9]{0,62}(/.[a-zA-Z0-9][-a-zA-Z0-9]{0,62})+/.?

3 InternetURL：
[a-zA-z]+://[^\s]* 或 ^http://([\w-]+\.)+[\w-]+(/[\w-./?%&=]*)?$

4 手机号码：
^(13[0-9]|14[5|7]|15[0|1|2|3|5|6|7|8|9]|18[0|1|2|3|5|6|7|8|9])\d{8}$

5 电话号码("XXX-XXXXXXX"、"XXXX-XXXXXXXX"、"XXX-XXXXXXX"、"XXX-XXXXXXXX"、"XXXXXXX"和"XXXXXXXX)：
^(\(\d{3,4}-)|\d{3.4}-)?\d{7,8}$

6 国内电话号码(0511-4405222、021-87888822)：
\d{3}-\d{8}|\d{4}-\d{7}

7 身份证号(15位、18位数字)：
^\d{15}|\d{18}$

8 短身份证号码(数字、字母x结尾)：
^([0-9]){7,18}(x|X)?$ 
^\d{8,18}|[0-9x]{8,18}|[0-9X]{8,18}?$

9 帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：
^[a-zA-Z][a-zA-Z0-9_]{4,15}$

10 密码(以字母开头，长度在6~18之间，只能包含字母、数字和下划线)：
^[a-zA-Z]\w{5,17}$

11 强密码(必须包含大小写字母和数字的组合，不能使用特殊字符，长度在8-10之间)：
^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,10}$  

12 日期格式：
^\d{4}-\d{1,2}-\d{1,2}

13 一年的12个月(01～09和1～12)：
^(0?[1-9]|1[0-2])$

14 一个月的31天(01～09和1～31)：
^((0?[1-9])|((1|2)[0-9])|30|31)$

16 1.有四种钱的表示形式我们可以接受:"10000.00" 和 "10,000.00", 和没有 "分" 的 "10000" 和 "10,000"：
^[1-9][0-9]*$

17 2.这表示任意一个不以0开头的数字,但是,这也意味着一个字符"0"不通过,所以我们采用下面的形式：
^(0|[1-9][0-9]*)$

18 3.一个0或者一个不以0开头的数字.我们还可以允许开头有一个负号：
^(0|-?[1-9][0-9]*)$

19 4.这表示一个0或者一个可能为负的开头不为0的数字.让用户以0开头好了.把负号的也去掉,因为钱总不能是负的吧.下面我们要加的是说明可能的小数部分：
^[0-9]+(.[0-9]+)?$

20 5.必须说明的是,小数点后面至少应该有1位数,所以"10."是不通过的,但是 "10" 和 "10.2" 是通过的：
^[0-9]+(.[0-9]{2})?$

21 6.这样我们规定小数点后面必须有两位,如果你认为太苛刻了,可以这样：
^[0-9]+(.[0-9]{1,2})?$

22 7.这样就允许用户只写一位小数.下面我们该考虑数字中的逗号了,我们可以这样：
^[0-9]{1,3}(,[0-9]{3})*(.[0-9]{1,2})?$

23 8.1到3个数字,后面跟着任意个 逗号+3个数字,逗号成为可选,而不是必须：
^([0-9]+|[0-9]{1,3}(,[0-9]{3})*)(.[0-9]{1,2})?$

24 备注：这就是最终结果了,别忘了"+"可以用"*"替代如果你觉得空字符串也可以接受的话(奇怪,为什么?)最后,别忘了在用函数时去掉去掉那个反斜杠,一般的错误都在这里

25 xml文件：
^([a-zA-Z]+-?)+[a-zA-Z0-9]+\\.[x|X][m|M][l|L]$

26 中文字符的正则表达式：
[\u4e00-\u9fa5]

27 双字节字符：(包括汉字在内，可以用来计算字符串的长度(一个双字节字符长度计2，ASCII字符计1))
[^\x00-\xff] 
28 空白行的正则表达式： (可以用来删除空白行)
\n\s*\r
29 HTML标记的正则表达式： (网上流传的版本太糟糕，上面这个也仅仅能部分，对于复杂的嵌套标记依旧无能为力)30 首尾空白字符的正则表达式：^\s*|\s*$或(^\s*)|(\s*$) (可以用来删除行首行尾的空白字符(包括空格、制表符、换页符等等)，非常有用的表达式)
<(\S*?)[^>]*>.*?</\1>|<.*? />

31 腾讯QQ号：(腾讯QQ号从10000开始)
[1-9][0-9]{4,} 

32 中国邮政编码： (中国邮政编码为6位数字)
[1-9]\d{5}(?!\d)

33 IP地址：(提取IP地址时有用)

\d+\.\d+\.\d+\.\d+

34 IP地址：

((?:(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d)\\.){3}(?:25[0-5]|2[0-4]\\d|[01]?\\d?\\d)) 





"^\d+$" //非负整数（正整数 + 0） 

"^[0-9]*[1-9][0-9]*$" //正整数 

"^((-\d+)|(0+))$" //非正整数（负整数 + 0） 

"^-[0-9]*[1-9][0-9]*$" //负整数 

"^-?\d+$" //整数 

"^\d+(\.\d+)?$" //非负浮点数（正浮点数 + 0） 

"^(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*))$" //正浮点数

"^((-\d+(\.\d+)?)|(0+(\.0+)?))$" //非正浮点数（负浮点数 + 0） 

"^(-(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*)))$" //负浮点数 

"^(-?\d+)(\.\d+)?$" //浮点数 

"^[A-Za-z]+$" //由26个英文字母组成的字符串 

"^[A-Z]+$" //由26个英文字母的大写组成的字符串 

"^[a-z]+$" //由26个英文字母的小写组成的字符串 

"^[A-Za-z0-9]+$" //由数字和26个英文字母组成的字符串 

"^\w+$" //由数字、26个英文字母或者下划线组成的字符串 

"^[\w-]+(\.[\w-]+)*@[\w-]+(\.[\w-]+)+$" //email地址 

"^[a-zA-z]+://(\w+(-\w+)*)(\.(\w+(-\w+)*))*(\?\S*)?$" //url



整数或者小数：^[0-9]+\.{0,1}[0-9]{0,2}$ 

只能输入数字："^[0-9]*$"。 

只能输入n位的数字："^\d{n}$"。 

只能输入至少n位的数字："^\d{n,}$"。 

只能输入m~n位的数字：。"^\d{m,n}$" 

只能输入零和非零开头的数字："^(0|[1-9][0-9]*)$"。 

只能输入有两位小数的正实数："^[0-9]+(.[0-9]{2})?$"。 

只能输入有1~3位小数的正实数："^[0-9]+(.[0-9]{1,3})?$"。 

只能输入非零的正整数："^\+?[1-9][0-9]*$"。 

只能输入非零的负整数："^\-[1-9][]0-9"*$。 

只能输入长度为3的字符："^.{3}$"。 

只能输入由26个英文字母组成的字符串："^[A-Za-z]+$"。 

只能输入由26个大写英文字母组成的字符串："^[A-Z]+$"。 

只能输入由26个小写英文字母组成的字符串："^[a-z]+$"。 

只能输入由数字和26个英文字母组成的字符串："^[A-Za-z0-9]+$"。 

只能输入由数字、26个英文字母或者下划线组成的字符串："^\w+$"。 

验证用户密码："^[a-zA-Z]\w{5,17}$"正确格式为：以字母开头，长度在6~18之间，只能包含字符、数字和下划线。 

验证是否含有^%&'',;=?$\"等字符："[^%&'',;=?$\x22]+"。 

只能输入汉字："^[\u4e00-\u9fa5]{0,}$" 

验证Email地址："^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$"。 

验证InternetURL："^http://([\w-]+\.)+[\w-]+(/[\w-./?%&=]*)?$"。 

验证电话号码："^(\(\d{3,4}-)|\d{3.4}-)?\d{7,8}$"正确格式为："XXX-XXXXXXX"、"XXXX-XXXXXXXX"、"XXX-XXXXXXX"、"XXX-XXXXXXXX"、"XXXXXXX"和"XXXXXXXX"。 

验证身份证号（15位或18位数字）："^\d{15}|\d{18}$"。 

验证一年的12个月：""正确格式为："01"～"09"和"1"～"12"。 
^(0?[1-9]|1[0-2])$
验证一个月的31天：
^((0?[1-9])|((1|2)[0-9])|30|31)$

正确格式为；"01"～"09"和"1"～"31"。

整数或者小数：
^[0-9]+\.{0,1}[0-9]{0,2}$ 

"^\w+$" 
//由数字、26个英文字母或者下划线组成的字符串 

"^[\w-]+(\.[\w-]+)*@[\w-]+(\.[\w-]+)+$" 
//email地址 

"^[a-zA-z]+://(\w+(-\w+)*)(\.(\w+(-\w+)*))*(\?\S*)?$" 
//url

可输入形如2008、2008-9、2008-09、2008-9-9、2008-09-09.    

^(\d{4}|(\d{4}-\d{1,2})|(\d{4}-\d{1,2}-\d{1,2}))$ 

邮箱验证正则表达式   
\w+([-+.']\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)* 
